// <auto-generated />
using System;
using Library_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library_Management_System.Migrations
{
    [DbContext(typeof(NeondbContext))]
    [Migration("20250427132240_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library_Management_System.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "A passionate writer from Lahore.",
                            Name = "Ayesha Khan"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "A poet from Karachi.",
                            Name = "Shaayan"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "A novelist from Islamabad.",
                            Name = "Zainab Ahmed"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "A historian from Multan.",
                            Name = "Hira Malik"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "A storyteller from Faisalabad.",
                            Name = "Sana Sheikh"
                        },
                        new
                        {
                            Id = 6,
                            Bio = "A biographer from Rawalpindi.",
                            Name = "Mariam Javed"
                        },
                        new
                        {
                            Id = 7,
                            Bio = "A travel writer from Peshawar.",
                            Name = "Aqsa Riaz"
                        },
                        new
                        {
                            Id = 8,
                            Bio = "A children's book author from Quetta.",
                            Name = "Nimra Shah"
                        },
                        new
                        {
                            Id = 9,
                            Bio = "A science fiction writer from Sialkot.",
                            Name = "Iqra Yousaf"
                        },
                        new
                        {
                            Id = 10,
                            Bio = "A journalist from Hyderabad.",
                            Name = "Rabia Noor"
                        });
                });

            modelBuilder.Entity("Library_Management_System.Models.Book", b =>
                {
                    b.Property<int>("Bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Bookid"));

                    b.Property<int?>("Authorid")
                        .HasColumnType("integer");

                    b.Property<string>("Genre")
                        .HasColumnType("text");

                    b.Property<int?>("Publishedyear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Bookid");

                    b.HasIndex("Authorid");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Bookid = 1,
                            Authorid = 1,
                            Genre = "Fiction",
                            Publishedyear = 2015,
                            Title = "The Journey"
                        },
                        new
                        {
                            Bookid = 2,
                            Authorid = 2,
                            Genre = "Romance",
                            Publishedyear = 2018,
                            Title = "Whispers of the Heart"
                        },
                        new
                        {
                            Bookid = 3,
                            Authorid = 3,
                            Genre = "History",
                            Publishedyear = 2020,
                            Title = "Echoes of the Past"
                        },
                        new
                        {
                            Bookid = 4,
                            Authorid = 4,
                            Genre = "Mystery",
                            Publishedyear = 2017,
                            Title = "The Forgotten Tale"
                        },
                        new
                        {
                            Bookid = 5,
                            Authorid = 5,
                            Genre = "Science Fiction",
                            Publishedyear = 2019,
                            Title = "Dreams of Tomorrow"
                        },
                        new
                        {
                            Bookid = 6,
                            Authorid = 6,
                            Genre = "Thriller",
                            Publishedyear = 2021,
                            Title = "The Silent Witness"
                        },
                        new
                        {
                            Bookid = 7,
                            Authorid = 7,
                            Genre = "Adventure",
                            Publishedyear = 2016,
                            Title = "Winds of Change"
                        },
                        new
                        {
                            Bookid = 8,
                            Authorid = 8,
                            Genre = "Fantasy",
                            Publishedyear = 2014,
                            Title = "The Golden Horizon"
                        },
                        new
                        {
                            Bookid = 9,
                            Authorid = 9,
                            Genre = "Psychology",
                            Publishedyear = 2022,
                            Title = "Shadows of the Mind"
                        },
                        new
                        {
                            Bookid = 10,
                            Authorid = 10,
                            Genre = "Drama",
                            Publishedyear = 2023,
                            Title = "The Final Chapter"
                        });
                });

            modelBuilder.Entity("Library_Management_System.Models.BorrowRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BorrowerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BorrowRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowDate = new DateTime(2025, 4, 17, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(4192),
                            BorrowerName = "Ayesha Khan",
                            ReturnDate = new DateTime(2025, 4, 22, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(4759)
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            BorrowDate = new DateTime(2025, 4, 12, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5962),
                            BorrowerName = "Fatima Ali",
                            ReturnDate = new DateTime(2025, 4, 17, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5964)
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            BorrowDate = new DateTime(2025, 4, 7, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5967),
                            BorrowerName = "Zainab Ahmed",
                            ReturnDate = new DateTime(2025, 4, 12, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5967)
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            BorrowDate = new DateTime(2025, 4, 2, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5969),
                            BorrowerName = "Hira Malik",
                            ReturnDate = new DateTime(2025, 4, 7, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5969)
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            BorrowDate = new DateTime(2025, 3, 28, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5971),
                            BorrowerName = "Sana Sheikh",
                            ReturnDate = new DateTime(2025, 4, 2, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5971)
                        },
                        new
                        {
                            Id = 6,
                            BookId = 6,
                            BorrowDate = new DateTime(2025, 3, 23, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5973),
                            BorrowerName = "Mariam Javed",
                            ReturnDate = new DateTime(2025, 3, 28, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5973)
                        },
                        new
                        {
                            Id = 7,
                            BookId = 7,
                            BorrowDate = new DateTime(2025, 3, 18, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5975),
                            BorrowerName = "Aqsa Riaz",
                            ReturnDate = new DateTime(2025, 3, 23, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5975)
                        },
                        new
                        {
                            Id = 8,
                            BookId = 8,
                            BorrowDate = new DateTime(2025, 3, 13, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5977),
                            BorrowerName = "Nimra Shah",
                            ReturnDate = new DateTime(2025, 3, 18, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5977)
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            BorrowDate = new DateTime(2025, 3, 8, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5978),
                            BorrowerName = "Iqra Yousaf",
                            ReturnDate = new DateTime(2025, 3, 13, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5979)
                        },
                        new
                        {
                            Id = 10,
                            BookId = 10,
                            BorrowDate = new DateTime(2025, 3, 3, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5980),
                            BorrowerName = "Rabia Noor",
                            ReturnDate = new DateTime(2025, 3, 8, 13, 22, 39, 706, DateTimeKind.Utc).AddTicks(5981)
                        });
                });

            modelBuilder.Entity("Library_Management_System.Models.Book", b =>
                {
                    b.HasOne("Library_Management_System.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("Authorid");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Library_Management_System.Models.BorrowRecord", b =>
                {
                    b.HasOne("Library_Management_System.Models.Book", "Book")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Library_Management_System.Models.Book", b =>
                {
                    b.Navigation("BorrowRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
